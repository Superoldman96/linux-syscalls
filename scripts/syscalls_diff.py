#!/usr/bin/env python3
#
# Diff implemented syscalls between two JSON tables generated by Systrack.
#
# NOTE: when comparing different arch/abi/bits combinations, take the output of
#       this tool with a grain of salt, because it only compares syscall names,
#       and those are known to be all over the place due to constant renaming
#       and weird arch-specific naming conventions.
#
# Usage: ./syscalls_diff.py tableA.json talbeB.json
#

import json
import sys

from operator import itemgetter
from os import isatty
from typing import List

def arch_bits_abi(table: dict) -> str:
	return table['kernel']['architecture']['name'] \
		+ '/' + str(table['kernel']['architecture']['bits']) \
		+ '/' + table['kernel']['abi']['name']

def main(argv: List[str]) -> int:
	if len(argv) != 3:
		sys.exit(f'Usage: {argv[0]} tableA.json talbeB.json')

	if isatty(sys.stdout.fileno()):
		RED    = '\033[91m'
		GREEN  = '\033[92m'
		BLUE   = '\033[94m'
		RESET  = '\033[0m'
	else:
		GREEN = RED = BLUE = RESET = ''

	PLUS   = GREEN + '+'
	MINUS  = RED + '-'
	RENAME = BLUE + 'r'

	with open(sys.argv[1]) as f:
		a = json.load(f)

	with open(sys.argv[2]) as f:
		b = json.load(f)

	arch_a = arch_bits_abi(a)
	arch_b = arch_bits_abi(b)
	tag_a  = a['kernel']['version']
	tag_b  = b['kernel']['version']
	same_arch = arch_a == arch_b

	if same_arch:
		print('Comparing', arch_a, tag_a, 'VS', tag_b)
		a = dict(map(itemgetter('number', 'name'), a['syscalls'])).items()
		b = dict(map(itemgetter('number', 'name'), b['syscalls'])).items()
	else:
		print('Comparing', arch_a, tag_a, 'VS', arch_b, tag_b)
		a = set(map(itemgetter('name'), a['syscalls']))
		b = set(map(itemgetter('name'), b['syscalls']))

	added   = b - a
	removed = a - b

	if not added and not removed:
		print('No differences')
		return 0

	n_added   = len(added)
	n_removed = len(removed)

	if same_arch:
		n_renamed = 0
		diff = {}

		for num, name in removed:
			diff[num] = (MINUS, name)

		for num, name in added:
			if num in diff:
				n_renamed += 1
				n_removed -= 1
				n_added   -= 1
				diff[num] = (RENAME, f'{diff[num][1]} -> {name}')
			else:
				diff[num] = (PLUS, name)

		for num, (op, name) in sorted(diff.items()):
			print(f'{op} {num} ({num:#x}) {name}{RESET}')

		if n_added:
			print(n_added, 'added', end='')

		if n_removed:
			if n_added: print(', ', end='')
			print(n_removed, 'removed', end='')

		if n_renamed:
			if n_added or n_removed: print(', ', end='')
			print(n_renamed, 'renamed', end='')
	else:
		for name in removed:
			print(f'{MINUS} {name}{RESET}')

		for name in added:
			print(f'{PLUS} {name}{RESET}')

		if n_added:
			print(n_added, 'added', end='')

		if n_removed:
			if n_added: print(', ', end='')
			print(n_removed, 'removed', end='')

	print()
	return 1

if __name__ == '__main__':
	sys.exit(main(sys.argv))
